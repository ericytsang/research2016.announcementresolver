group 'com.github.ericytsang'

buildscript {
    ext.kotlin_version = '1.0.2-1'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'

tasks.withType(JavaCompile) {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

configurations.compile.resolutionStrategy.cacheChangingModulesFor(0,'seconds')
dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile ("com.github.ericytsang:research2016.propositionallogic:dev-SNAPSHOT") {changing = true}
    compile group: 'org.json', name: 'json', version: '20160212'
    testCompile 'junit:junit:4.11'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

task jarBruteForceSolver(type: Jar, dependsOn: classes) {
    from sourceSets.main.output
    from {configurations.runtime.collect {zipTree(it)}} {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    manifest {
        attributes 'Main-Class': 'com.github.ericytsang.research2016.announcementresolver.BruteForceAnnouncementResolver'
    }
    baseName = 'bruteForceSolver'
}

task jarByDistanceSolver(type: Jar, dependsOn: classes) {
    from sourceSets.main.output
    from {configurations.runtime.collect {zipTree(it)}} {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    manifest {
        attributes 'Main-Class': 'com.github.ericytsang.research2016.announcementresolver.ByDistanceAnnouncementResolver'
    }
    baseName = 'byDistanceSolver'
}

task jarExhaustiveSolver(type: Jar, dependsOn: classes) {
    from sourceSets.main.output
    from {configurations.runtime.collect {zipTree(it)}} {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    manifest {
        attributes 'Main-Class': 'com.github.ericytsang.research2016.announcementresolver.ExhaustiveAnnouncementResolver'
    }
    baseName = 'exhaustiveSolver'
}

task jarAll {
    dependsOn 'jarBruteForceSolver'
    dependsOn 'jarByDistanceSolver'
    dependsOn 'jarExhaustiveSolver'
}
